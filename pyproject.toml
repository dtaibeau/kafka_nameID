[tool.poetry]
name = "kafka-nameid"
version = "0.1.0"
description = ""
authors = ["Delphine Tai-Beauchamp <delphinetaibeauchamp@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
streamlit = "^1.36.0"
pydantic = "^2.8.2"
kafka-python = "^2.0.2"
kafka = "^1.3.5"
youtube-transcript-api = "^0.6.2"
openai = "^1.37.1"
python-dotenv = "^1.0.1"
langchain = "^0.2.11"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"

[tool.isort]
profile = "black"

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
ignore = [
    "F821", # Unknown name (disabled because it doesnt respect annotation postponing),
    "E501", # long lines
]
fixable = ["ALL"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
[docformatter]
pre-summary-newline = true

[tool.mypy]
plugins = [
  "pydantic.mypy"
]

[tool.black]
line-length = 120

[tool.pytest.ini_options]
junit_duration_report = "call"
junit_family = "xunit2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
